framework:
    cache:
        # Unique name of your app: used to compute stable namespaces for cache keys.
        #prefix_seed: your_vendor_name/app_name

        # The "app" cache stores to the filesystem by default.
        # The data in this cache should persist between deploys.
        # Other options include:

        # Redis
        #app: cache.adapter.redis
        #default_redis_provider: redis://localhost

        # APCu (not recommended with heavy random-write workloads as memory fragmentation can cause perf issues)
        #app: cache.adapter.apcu

        # Namespaced pools use the above "app" backend by default
        pools:
            my_cache_pool:
                adapter: cache.adapter.redis
                tags: true
                provider: app.my_custom_redis_provider
services:
    app.my_custom_redis_provider:
        class: \Redis
        factory: ['Symfony\Component\Cache\Adapter\RedisAdapter', 'createConnection']
        arguments:
            - 'redis://%env(REDIS_HOST)%:%env(REDIS_PORT)%'
        #    - { retry_interval: 2, timeout: 10 }


    #    Redis:
    #        # you can also use \RedisArray, \RedisCluster or \Predis\Client classes
    #        class: Redis
    #        calls:
    #            - connect:
    #                  - '%env(REDIS_HOST)%'
    #                  - '%env(int:REDIS_PORT)%'
    #
    #            # uncomment the following if your Redis server requires a password
    #            # - auth:
    #            #     - '%env(REDIS_PASSWORD)%'
    #    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
    #        arguments:
    #            - '@Redis'